services:
  kafka:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.kafka
    container_name: kafka
    ports:
      - '9092:9092'
    env_file:
      - .env
    networks:
      - kafka-net
    volumes:
      - ./kafka-data:/var/lib/kafka/data

  schema-registry:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.schemaRegistry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - '8081:8081'
    env_file:
      - .env
    networks:
      - kafka-net

  connect:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.connect
    container_name: connect
    depends_on:
      - kafka
      - schema-registry
    ports:
      - '8083:8083'
    env_file:
      - .env
    networks:
      - kafka-net

  akhq:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.akhq
    container_name: akhq
    depends_on:
      - kafka
    ports:
      - '9000:8080'
    env_file:
      - .env
    volumes:
      - ./compose/akhq.application.yml:/app/application.yml
    networks:
      - kafka-net

  connect-init:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.curl
    container_name: connect-init
    depends_on:
      - connect
    env_file:
      - .env
    volumes:
      - ./connectors:/connectors
    entrypoint: /bin/sh
    command: >
      -c '
        for template in /connectors/*.template.json; do
          json="$${template%.template.json}.json"
          envsubst < "$$template" > "$$json" &&
          curl -X POST -H "Content-Type: application/json" --data "@$$json" http://connect:8083/connectors;
        done
      '
    profiles:
      - manual
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
