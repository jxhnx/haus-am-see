services:
  minio:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.minio
    container_name: minio
    env_file:
      - .lake.env
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - lake-net
      - shared-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 10s
      timeout: 5s
      retries: 5

  mc:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.miniomc
    container_name: mc
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .lake.env
    networks:
      - lake-net

  spark-master:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.spark
    container_name: spark-master
    env_file:
      - .lake.env
    environment:
      - SPARK_MODE=master
    ports:
      - '8085:8080'
      - '7077:7077'
    command: >
      bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.master.Master --host spark-master"
    networks:
      - lake-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8085']
      interval: 10s
      timeout: 5s
      retries: 5

  spark-worker:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.spark
    container_name: spark-worker
    env_file:
      - .lake.env
    environment:
      - SPARK_MODE=worker
    depends_on:
      - spark-master
    command: >
      bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - lake-net

  spark-notebook:
    build:
      context: .
      dockerfile: ./compose/Dockerfile.spark
    container_name: spark-notebook
    env_file:
      - .lake.env
    ports:
      - '8888:8888'
    networks:
      - lake-net
    command: >
      jupyter-lab
      --ip=0.0.0.0
      --port=8888
      --no-browser
      --IdentityProvider.token=''
      --ServerApp.root_dir=/home/spark/work
    volumes:
      - ./spark:/home/spark/work

volumes:
  minio-data:

networks:
  lake-net:
    driver: bridge
  shared-net:
    driver: bridge
